---
// import { Icon } from 'astro-icon';
---

<!-- Source: https://github.com/argyleink/gui-challenges/tree/main/theme-switch -->
<button id="theme-toggle" title="Toggle theme" aria-label="auto" aria-live="polite">
	<span class="sun">🌝</span>
	<span class="moon">🌚</span>
</button>

<style lang="css">
	button {
		background: none;
		border: 0;
		cursor: pointer;
		touch-action: manipulation;
		aspect-ratio: 1/1;
		display: grid;
		place-items: center;
		padding: var(--size-fl-1\/2);
		border-radius: 0.25em;
		color: hsl(var(--jm-mid));
		transition-property: background-color, color;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		transition-duration: 300ms;

		&:hover {
			background-color: var(--hover-bg);
			color: hsl(var(--jm-primary));
		}
	}

	.sun,
	.moon {
		block-size: var(--size-fl-1\.25);
		inline-size: var(--size-fl-1\.25);
		color: inherit;
	}

	.sun {
		display: none;
	}

	html[data-theme='dark'] {
		& .moon {
			display: none;
		}

		& .sun {
			display: block;
		}
	}
</style>

<script>
	const storageKey = 'theme-preference';
	const onClick = () => {
		// flip current value
		theme.value = theme.value === 'light' ? 'dark' : 'light';
		setPreference();
	};
	const getColorPreference = () => {
		if (localStorage.getItem(storageKey)) return localStorage.getItem(storageKey);
		else return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const setPreference = () => {
		localStorage.setItem(storageKey, theme.value);
		reflectPreference();
	};
	const reflectPreference = () => {
		document.firstElementChild.setAttribute('data-theme', theme.value);
		document.firstElementChild.classList.toggle('dark');
		document.querySelector('#theme-toggle')?.setAttribute('aria-label', theme.value);
	};
	const theme = {
		value: getColorPreference(),
	};
	// set early so no page flashes / CSS is made aware
	reflectPreference();
	window.onload = () => {
		// set on load so screen readers can see latest value on the button
		reflectPreference();
		// now this script can find and listen for clicks on the control
		document.querySelector('#theme-toggle').addEventListener('click', onClick);
	};
	// sync with system changes
	window
		.matchMedia('(prefers-color-scheme: dark)')
		.addEventListener('change', ({ matches: isDark }) => {
			theme.value = isDark ? 'dark' : 'light';
			setPreference();
		});
</script>
